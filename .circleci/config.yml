version: 2.1
orbs:
  go: circleci/go@1.11.0
  commitlint: conventional-changelog/commitlint@1.0

parameters:
  rebuild_cache:
    type: boolean
    default: false

# Extra contexts to expose to all jobs below
contexts: &contexts
  - aws-credentials
  - ghaccesstoken
  - docker-registry
  - npm-credentials
  - vault-dev
  - confluence
  - circleci-credentials
  - tray-webhooks

# Configuration to pass to test and cache jobs
cfg: &cfg
  context: *contexts

# Branches used for releasing code, pre-release or not
release_branches: &release_branches
  - "main"

executors:
  commitlint-executor:
    docker:
      - image: cimg/node:current
    working_directory: ~/project

jobs:
  test:
    executor:
      name: go/default # Use the default executor from the orb
      tag: "1.22.2" # Specify a version tag
    steps:
      - checkout # checkout source code
      - go/load-cache # Load cached Go modules.
      - go/mod-download # Run 'go mod download'.
      - go/save-cache # Save Go modules to cache.
      - run:
          name: Run unit tests
          command: make test
      - run:
          name: Run integration tests
          command: make integration-test
  release:
    docker:
      - image: cimg/go:1.20
    steps:
      - run: curl -sL https://git.io/autotag-install | sudo sh -s -- -b /usr/bin
      - checkout
      - run: autotag --scheme=conventional
      - run: curl -sfL https://goreleaser.com/static/run | bash
  setup-commitlint:
    executor: commitlint-executor
    steps:
      - checkout
      - restore_cache:
          key: lock-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: lock-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules
  lint-commit:
    executor: commitlint-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Define environment variable with latest commit's message
          command: |
            echo 'export COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Lint commit message
          command: echo "$COMMIT_MESSAGE" | npx commitlint



workflows:
  main:
    jobs:
      - setup-commitlint:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - lint-commit:
          requires:
            - setup-commitlint
          # Only run this job on git tag pushes
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - test:
          # Only run this job on git tag pushes
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - release:
          # Only run this job on git tag pushes
          requires:
            - lint-commit
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/

  open_branch:
    jobs:
      - setup-commitlint
      - lint-commit:
          requires:
            - setup-commitlint
      - test:
          filters:
            branches:
              ignore: main
            tags:
              ignore: /.*/
